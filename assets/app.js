angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope",function(t){t.$on("login",function(n,o){t.currentUser=o}),t.logout=function(){t.currentUser=null}}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","$location",function(t,n,o){t.login=function(e,r){n.login(e,r).then(function(n){t.$emit("login",n.data),o.path("/")})}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc","$location",function(t,n,o){t.register=function(e,r,l){l===r&&n.register(e,r).then(function(l){n.login(e,r).then(function(n){t.$emit("login",n.data),o.path("/")})})}}]),angular.module("app").config(["$routeProvider",function(t){t.when("/",{controller:"ScoresCtrl",templateUrl:"scores.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"}).when("/home",{controller:"HomeCtrl",templateUrl:"home.html"})}]),angular.module("app").controller("ScoresCtrl",["$scope","PostsSvc","$location",function(t,n,o){t.addPost=function(){t.postBody&&n.create({username:"anthonyprograms",body:t.postBody}).success(function(n){t.postBody=null})},n.fetch().success(function(n){t.posts=n})}]),angular.module("app").service("PostsSvc",["$http",function(t){this.fetch=function(){return t.get("/api/posts")},this.create=function(n){return t.post("/api/posts",n)}}]),angular.module("app").service("UserSvc",["$http",function(t){var n=this;n.getUser=function(){return t.get("/api/users")},n.login=function(o,e){return t.post("/api/sessions",{username:o,password:e}).then(function(o){return n.token=o.data,t.defaults.headers.common["X-Auth"]=o.data,n.getUser()})},n.register=function(o,e){return t.post("/api/users",{username:o,password:e}).then(function(){return n.login(o,e)})}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImFwcGxpY2F0aW9uLmN0cmwuanMiLCJsb2dpbi5jdHJsLmpzIiwicmVnaXN0ZXIuY3RybC5qcyIsInJvdXRlcy5qcyIsInNjb3Jlcy5jdHJsLmpzIiwic2NvcmVzLnN2Yy5qcyIsInVzZXIuc3ZjLmpzIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJtb2R1bGUiLCJjb250cm9sbGVyIiwiJHNjb3BlIiwiJG9uIiwiXyIsInVzZXIiLCJjdXJyZW50VXNlciIsImxvZ291dCIsIlVzZXJTdmMiLCIkbG9jYXRpb24iLCJsb2dpbiIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJ0aGVuIiwicmVzcG9uc2UiLCIkZW1pdCIsImRhdGEiLCJwYXRoIiwicmVnaXN0ZXIiLCJyZXR5cGUiLCJjb25maWciLCIkcm91dGVQcm92aWRlciIsIndoZW4iLCJ0ZW1wbGF0ZVVybCIsIlBvc3RzU3ZjIiwiYWRkUG9zdCIsInBvc3RCb2R5IiwiY3JlYXRlIiwiYm9keSIsInN1Y2Nlc3MiLCJwb3N0IiwiZmV0Y2giLCJwb3N0cyIsInNlcnZpY2UiLCIkaHR0cCIsInRoaXMiLCJnZXQiLCJzdmMiLCJnZXRVc2VyIiwidmFsIiwidG9rZW4iLCJkZWZhdWx0cyIsImhlYWRlcnMiLCJjb21tb24iXSwibWFwcGluZ3MiOiJBQUFBQSxRQUFBQyxPQUFBLE9BQ0EsWUNEQUQsUUFBQUMsT0FBQSxPQUNBQyxXQUFBLG1CQUFBLFNBQUEsU0FBQUMsR0FDQUEsRUFBQUMsSUFBQSxRQUFBLFNBQUFDLEVBQUFDLEdBQ0FILEVBQUFJLFlBQUFELElBRUFILEVBQUFLLE9BQUEsV0FDQUwsRUFBQUksWUFBQSxTQ05BUCxRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsYUFBQSxTQUFBLFVBQUEsWUFBQSxTQUFBQyxFQUFBTSxFQUFBQyxHQUNBUCxFQUFBUSxNQUFBLFNBQUFDLEVBQUFDLEdBQ0FKLEVBQUFFLE1BQUFDLEVBQUFDLEdBQ0FDLEtBQUEsU0FBQUMsR0FDQVosRUFBQWEsTUFBQSxRQUFBRCxFQUFBRSxNQUNBUCxFQUFBUSxLQUFBLFdDTkFsQixRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsZ0JBQUEsU0FBQSxVQUFBLFlBQUEsU0FBQUMsRUFBQU0sRUFBQUMsR0FDQVAsRUFBQWdCLFNBQUEsU0FBQVAsRUFBQUMsRUFBQU8sR0FDQUEsSUFBQVAsR0FDQUosRUFBQVUsU0FBQVAsRUFBQUMsR0FDQUMsS0FBQSxTQUFBUixHQUNBRyxFQUFBRSxNQUFBQyxFQUFBQyxHQUNBQyxLQUFBLFNBQUFDLEdBQ0FaLEVBQUFhLE1BQUEsUUFBQUQsRUFBQUUsTUFDQVAsRUFBQVEsS0FBQSxhQ1RBbEIsUUFBQUMsT0FBQSxPQUNBb0IsUUFBQSxpQkFBQSxTQUFBQyxHQUNBQSxFQUNBQyxLQUFBLEtBQUFyQixXQUFBLGFBQUFzQixZQUFBLGdCQUNBRCxLQUFBLGFBQUFyQixXQUFBLGVBQUFzQixZQUFBLGtCQUNBRCxLQUFBLFVBQUFyQixXQUFBLFlBQUFzQixZQUFBLGVBQ0FELEtBQUEsU0FBQXJCLFdBQUEsV0FBQXNCLFlBQUEsaUJDTkF4QixRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsY0FBQSxTQUFBLFdBQUEsWUFBQSxTQUFBQyxFQUFBc0IsRUFBQWYsR0FDQVAsRUFBQXVCLFFBQUEsV0FDQXZCLEVBQUF3QixVQUNBRixFQUFBRyxRQUNBaEIsU0FBQSxrQkFDQWlCLEtBQUExQixFQUFBd0IsV0FDQUcsUUFBQSxTQUFBQyxHQUNBNUIsRUFBQXdCLFNBQUEsUUFLQUYsRUFBQU8sUUFBQUYsUUFBQSxTQUFBRyxHQUNBOUIsRUFBQThCLE1BQUFBLE9DZEFqQyxRQUFBQyxPQUFBLE9BQ0FpQyxRQUFBLFlBQUEsUUFBQSxTQUFBQyxHQUNBQyxLQUFBSixNQUFBLFdBQ0EsTUFBQUcsR0FBQUUsSUFBQSxlQUVBRCxLQUFBUixPQUFBLFNBQUFHLEdBQ0EsTUFBQUksR0FBQUosS0FBQSxhQUFBQSxPQ05BL0IsUUFBQUMsT0FBQSxPQUNBaUMsUUFBQSxXQUFBLFFBQUEsU0FBQUMsR0FDQSxHQUFBRyxHQUFBRixJQUNBRSxHQUFBQyxRQUFBLFdBQ0EsTUFBQUosR0FBQUUsSUFBQSxlQUVBQyxFQUFBM0IsTUFBQSxTQUFBQyxFQUFBQyxHQUNBLE1BQUFzQixHQUFBSixLQUFBLGlCQUNBbkIsU0FBQUEsRUFBQUMsU0FBQUEsSUFDQUMsS0FBQSxTQUFBMEIsR0FHQSxNQUZBRixHQUFBRyxNQUFBRCxFQUFBdkIsS0FDQWtCLEVBQUFPLFNBQUFDLFFBQUFDLE9BQUEsVUFBQUosRUFBQXZCLEtBQ0FxQixFQUFBQyxhQUdBRCxFQUFBbkIsU0FBQSxTQUFBUCxFQUFBQyxHQUNBLE1BQUFzQixHQUFBSixLQUFBLGNBQ0FuQixTQUFBQSxFQUFBQyxTQUFBQSxJQUNBQyxLQUFBLFdBQ0EsTUFBQXdCLEdBQUEzQixNQUFBQyxFQUFBQyIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZSgnYXBwJywgW1xuICAgICduZ1JvdXRlJ1xuXSkiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdBcHBsaWNhdGlvbkN0cmwnLCBmdW5jdGlvbiAoJHNjb3BlKSB7XG4gICAgJHNjb3BlLiRvbignbG9naW4nLCBmdW5jdGlvbiAoXywgdXNlcikge1xuICAgICAgICAkc2NvcGUuY3VycmVudFVzZXIgPSB1c2VyXG4gICAgfSlcbiAgICAkc2NvcGUubG9nb3V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAkc2NvcGUuY3VycmVudFVzZXIgPSBudWxsXG4gICAgfVxufSkiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdMb2dpbkN0cmwnLCBmdW5jdGlvbiAoJHNjb3BlLCBVc2VyU3ZjLCAkbG9jYXRpb24pIHtcbiAgICAgICAgJHNjb3BlLmxvZ2luID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuICAgICAgICBVc2VyU3ZjLmxvZ2luKHVzZXJuYW1lLCBwYXNzd29yZClcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ2xvZ2luJywgcmVzcG9uc2UuZGF0YSlcbiAgICAgICAgICAgICRsb2NhdGlvbi5wYXRoKCcvJylcbiAgICAgICAgfSlcbiAgICB9XG59KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignUmVnaXN0ZXJDdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgVXNlclN2YywgJGxvY2F0aW9uKSB7XG4gICAgJHNjb3BlLnJlZ2lzdGVyID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCwgcmV0eXBlKSB7XG4gICAgICAgIGlmIChyZXR5cGUgPT09IHBhc3N3b3JkKSB7XG4gICAgICAgICAgICBVc2VyU3ZjLnJlZ2lzdGVyKHVzZXJuYW1lLCBwYXNzd29yZClcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uICh1c2VyKSB7XG4gICAgICAgICAgICAgICAgVXNlclN2Yy5sb2dpbih1c2VybmFtZSwgcGFzc3dvcmQpXG4gICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgICAgICRzY29wZS4kZW1pdCgnbG9naW4nLCByZXNwb25zZS5kYXRhKVxuICAgICAgICAgICAgICAgICAgICAkbG9jYXRpb24ucGF0aCgnLycpXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9XG59KSIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbmZpZyhmdW5jdGlvbiAoJHJvdXRlUHJvdmlkZXIpIHtcbiAgICAkcm91dGVQcm92aWRlclxuICAgIC53aGVuKCcvJywgeyBjb250cm9sbGVyOiAnU2NvcmVzQ3RybCcsIHRlbXBsYXRlVXJsOiAnc2NvcmVzLmh0bWwnIH0pXG4gICAgLndoZW4oJy9yZWdpc3RlcicsIHtjb250cm9sbGVyOiAnUmVnaXN0ZXJDdHJsJywgdGVtcGxhdGVVcmw6ICdyZWdpc3Rlci5odG1sJyB9KVxuICAgIC53aGVuKCcvbG9naW4nLCB7Y29udHJvbGxlcjogJ0xvZ2luQ3RybCcsIHRlbXBsYXRlVXJsOiAnbG9naW4uaHRtbCcgfSlcbiAgICAud2hlbignL2hvbWUnLCB7Y29udHJvbGxlcjogJ0hvbWVDdHJsJywgdGVtcGxhdGVVcmw6ICdob21lLmh0bWwnIH0pXG59KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignU2NvcmVzQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsIFBvc3RzU3ZjLCAkbG9jYXRpb24pIHtcbiAgICAkc2NvcGUuYWRkUG9zdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCRzY29wZS5wb3N0Qm9keSkge1xuICAgICAgICAgICAgUG9zdHNTdmMuY3JlYXRlKHtcbiAgICAgICAgICAgICAgICB1c2VybmFtZTogJ2FudGhvbnlwcm9ncmFtcycsXG4gICAgICAgICAgICAgICAgYm9keTogJHNjb3BlLnBvc3RCb2R5XG4gICAgICAgICAgICB9KS5zdWNjZXNzKGZ1bmN0aW9uIChwb3N0KSB7XG4gICAgICAgICAgICAgICAgJHNjb3BlLnBvc3RCb2R5ID0gbnVsbFxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIFBvc3RzU3ZjLmZldGNoKCkuc3VjY2VzcyhmdW5jdGlvbiAocG9zdHMpIHtcbiAgICAgICAgJHNjb3BlLnBvc3RzID0gcG9zdHNcbiAgICB9KVxufSlcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLnNlcnZpY2UoJ1Bvc3RzU3ZjJywgZnVuY3Rpb24gKCRodHRwKSB7XG4gICAgdGhpcy5mZXRjaCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9wb3N0cycpXG4gICAgfVxuICAgIHRoaXMuY3JlYXRlID0gZnVuY3Rpb24gKHBvc3QpIHtcbiAgICAgICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvcG9zdHMnLCBwb3N0KVxuICAgIH1cbn0pXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5zZXJ2aWNlKCdVc2VyU3ZjJywgZnVuY3Rpb24gKCRodHRwKSB7XG4gICAgdmFyIHN2YyA9IHRoaXNcbiAgICBzdmMuZ2V0VXNlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS91c2VycycpXG4gICAgfVxuICAgIHN2Yy5sb2dpbiA9IGZ1bmN0aW9uICh1c2VybmFtZSwgcGFzc3dvcmQpIHtcbiAgICAgICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvc2Vzc2lvbnMnLCB7XG4gICAgICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsIHBhc3N3b3JkOiBwYXNzd29yZFxuICAgICAgICB9KS50aGVuKGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgICAgICAgIHN2Yy50b2tlbiA9IHZhbC5kYXRhXG4gICAgICAgICAgICAkaHR0cC5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vblsnWC1BdXRoJ10gPSB2YWwuZGF0YVxuICAgICAgICAgICAgcmV0dXJuIHN2Yy5nZXRVc2VyKClcbiAgICAgICAgfSlcbiAgICB9XG4gICAgc3ZjLnJlZ2lzdGVyID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuICAgICAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS91c2VycycsIHtcbiAgICAgICAgICAgIHVzZXJuYW1lOiB1c2VybmFtZSwgcGFzc3dvcmQ6IHBhc3N3b3JkXG4gICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHN2Yy5sb2dpbih1c2VybmFtZSwgcGFzc3dvcmQpXG4gICAgICAgIH0pXG4gICAgfVxufSlcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
