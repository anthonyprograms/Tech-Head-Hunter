angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope",function(e){e.$on("login",function(t,n){e.currentUser=n}),e.logout=function(){e.currentUser=null}}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","$location",function(e,t,n){e.login=function(o,r){t.login(o,r).then(function(t){e.$emit("login",t.data),n.path("/")})}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc","$location",function(e,t,n){e.register=function(o,r,c){c===r&&t.register(o,r).then(function(c){t.login(o,r).then(function(t){e.$emit("login",t.data),n.path("/")})})}}]),angular.module("app").config(["$routeProvider",function(e){e.when("/",{controller:"ScoresCtrl",templateUrl:"scores.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"}).when("/home",{controller:"HomeCtrl",templateUrl:"home.html"})}]),angular.module("app").controller("ScoresCtrl",["$scope","ScoresSvc","$location",function(e,t,n){e.addScore=function(){e.scores&&t.create({username:"anthonyprograms",score:e.scores}).success(function(t){e.postBody=null})},PostsSvc.fetch().success(function(t){e.scores=t})}]),angular.module("app").service("ScoresSvc",["$http",function(e){this.fetch=function(){return e.get("/api/scores")},this.create=function(t){return e.post("/api/scores",t)}}]),angular.module("app").service("UserSvc",["$http",function(e){var t=this;t.getUser=function(){return e.get("/api/users")},t.login=function(n,o){return e.post("/api/sessions",{username:n,password:o}).then(function(n){return t.token=n.data,e.defaults.headers.common["X-Auth"]=n.data,t.getUser()})},t.register=function(n,o){return e.post("/api/users",{username:n,password:o}).then(function(){return t.login(n,o)})}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImFwcGxpY2F0aW9uLmN0cmwuanMiLCJsb2dpbi5jdHJsLmpzIiwicmVnaXN0ZXIuY3RybC5qcyIsInJvdXRlcy5qcyIsInNjb3Jlcy5jdHJsLmpzIiwic2NvcmVzLnN2Yy5qcyIsInVzZXIuc3ZjLmpzIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJtb2R1bGUiLCJjb250cm9sbGVyIiwiJHNjb3BlIiwiJG9uIiwiXyIsInVzZXIiLCJjdXJyZW50VXNlciIsImxvZ291dCIsIlVzZXJTdmMiLCIkbG9jYXRpb24iLCJsb2dpbiIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJ0aGVuIiwicmVzcG9uc2UiLCIkZW1pdCIsImRhdGEiLCJwYXRoIiwicmVnaXN0ZXIiLCJyZXR5cGUiLCJjb25maWciLCIkcm91dGVQcm92aWRlciIsIndoZW4iLCJ0ZW1wbGF0ZVVybCIsIlNjb3Jlc1N2YyIsImFkZFNjb3JlIiwic2NvcmVzIiwiY3JlYXRlIiwic2NvcmUiLCJzdWNjZXNzIiwicG9zdCIsInBvc3RCb2R5IiwiUG9zdHNTdmMiLCJmZXRjaCIsInNlcnZpY2UiLCIkaHR0cCIsInRoaXMiLCJnZXQiLCJzdmMiLCJnZXRVc2VyIiwidmFsIiwidG9rZW4iLCJkZWZhdWx0cyIsImhlYWRlcnMiLCJjb21tb24iXSwibWFwcGluZ3MiOiJBQUFBQSxRQUFBQyxPQUFBLE9BQ0EsWUNEQUQsUUFBQUMsT0FBQSxPQUNBQyxXQUFBLG1CQUFBLFNBQUEsU0FBQUMsR0FDQUEsRUFBQUMsSUFBQSxRQUFBLFNBQUFDLEVBQUFDLEdBQ0FILEVBQUFJLFlBQUFELElBRUFILEVBQUFLLE9BQUEsV0FDQUwsRUFBQUksWUFBQSxTQ05BUCxRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsYUFBQSxTQUFBLFVBQUEsWUFBQSxTQUFBQyxFQUFBTSxFQUFBQyxHQUNBUCxFQUFBUSxNQUFBLFNBQUFDLEVBQUFDLEdBQ0FKLEVBQUFFLE1BQUFDLEVBQUFDLEdBQ0FDLEtBQUEsU0FBQUMsR0FDQVosRUFBQWEsTUFBQSxRQUFBRCxFQUFBRSxNQUNBUCxFQUFBUSxLQUFBLFdDTkFsQixRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsZ0JBQUEsU0FBQSxVQUFBLFlBQUEsU0FBQUMsRUFBQU0sRUFBQUMsR0FDQVAsRUFBQWdCLFNBQUEsU0FBQVAsRUFBQUMsRUFBQU8sR0FDQUEsSUFBQVAsR0FDQUosRUFBQVUsU0FBQVAsRUFBQUMsR0FDQUMsS0FBQSxTQUFBUixHQUNBRyxFQUFBRSxNQUFBQyxFQUFBQyxHQUNBQyxLQUFBLFNBQUFDLEdBQ0FaLEVBQUFhLE1BQUEsUUFBQUQsRUFBQUUsTUFDQVAsRUFBQVEsS0FBQSxhQ1RBbEIsUUFBQUMsT0FBQSxPQUNBb0IsUUFBQSxpQkFBQSxTQUFBQyxHQUNBQSxFQUNBQyxLQUFBLEtBQUFyQixXQUFBLGFBQUFzQixZQUFBLGdCQUNBRCxLQUFBLGFBQUFyQixXQUFBLGVBQUFzQixZQUFBLGtCQUNBRCxLQUFBLFVBQUFyQixXQUFBLFlBQUFzQixZQUFBLGVBQ0FELEtBQUEsU0FBQXJCLFdBQUEsV0FBQXNCLFlBQUEsaUJDTkF4QixRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsY0FBQSxTQUFBLFlBQUEsWUFBQSxTQUFBQyxFQUFBc0IsRUFBQWYsR0FDQVAsRUFBQXVCLFNBQUEsV0FDQXZCLEVBQUF3QixRQUNBRixFQUFBRyxRQUNBaEIsU0FBQSxrQkFDQWlCLE1BQUExQixFQUFBd0IsU0FDQUcsUUFBQSxTQUFBQyxHQUNBNUIsRUFBQTZCLFNBQUEsUUFLQUMsU0FBQUMsUUFBQUosUUFBQSxTQUFBSCxHQUNBeEIsRUFBQXdCLE9BQUFBLE9DZEEzQixRQUFBQyxPQUFBLE9BQ0FrQyxRQUFBLGFBQUEsUUFBQSxTQUFBQyxHQUNBQyxLQUFBSCxNQUFBLFdBQ0EsTUFBQUUsR0FBQUUsSUFBQSxnQkFFQUQsS0FBQVQsT0FBQSxTQUFBQyxHQUNBLE1BQUFPLEdBQUFMLEtBQUEsY0FBQUYsT0NOQTdCLFFBQUFDLE9BQUEsT0FDQWtDLFFBQUEsV0FBQSxRQUFBLFNBQUFDLEdBQ0EsR0FBQUcsR0FBQUYsSUFDQUUsR0FBQUMsUUFBQSxXQUNBLE1BQUFKLEdBQUFFLElBQUEsZUFFQUMsRUFBQTVCLE1BQUEsU0FBQUMsRUFBQUMsR0FDQSxNQUFBdUIsR0FBQUwsS0FBQSxpQkFDQW5CLFNBQUFBLEVBQUFDLFNBQUFBLElBQ0FDLEtBQUEsU0FBQTJCLEdBR0EsTUFGQUYsR0FBQUcsTUFBQUQsRUFBQXhCLEtBQ0FtQixFQUFBTyxTQUFBQyxRQUFBQyxPQUFBLFVBQUFKLEVBQUF4QixLQUNBc0IsRUFBQUMsYUFHQUQsRUFBQXBCLFNBQUEsU0FBQVAsRUFBQUMsR0FDQSxNQUFBdUIsR0FBQUwsS0FBQSxjQUNBbkIsU0FBQUEsRUFBQUMsU0FBQUEsSUFDQUMsS0FBQSxXQUNBLE1BQUF5QixHQUFBNUIsTUFBQUMsRUFBQUMiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhci5tb2R1bGUoJ2FwcCcsIFtcbiAgICAnbmdSb3V0ZSdcbl0pIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignQXBwbGljYXRpb25DdHJsJywgZnVuY3Rpb24gKCRzY29wZSkge1xuICAgICRzY29wZS4kb24oJ2xvZ2luJywgZnVuY3Rpb24gKF8sIHVzZXIpIHtcbiAgICAgICAgJHNjb3BlLmN1cnJlbnRVc2VyID0gdXNlclxuICAgIH0pXG4gICAgJHNjb3BlLmxvZ291dCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgJHNjb3BlLmN1cnJlbnRVc2VyID0gbnVsbFxuICAgIH1cbn0pIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignTG9naW5DdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgVXNlclN2YywgJGxvY2F0aW9uKSB7XG4gICAgICAgICRzY29wZS5sb2dpbiA9IGZ1bmN0aW9uICh1c2VybmFtZSwgcGFzc3dvcmQpIHtcbiAgICAgICAgVXNlclN2Yy5sb2dpbih1c2VybmFtZSwgcGFzc3dvcmQpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdsb2dpbicsIHJlc3BvbnNlLmRhdGEpXG4gICAgICAgICAgICAkbG9jYXRpb24ucGF0aCgnLycpXG4gICAgICAgIH0pXG4gICAgfVxufSlcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbnRyb2xsZXIoJ1JlZ2lzdGVyQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsIFVzZXJTdmMsICRsb2NhdGlvbikge1xuICAgICRzY29wZS5yZWdpc3RlciA9IGZ1bmN0aW9uICh1c2VybmFtZSwgcGFzc3dvcmQsIHJldHlwZSkge1xuICAgICAgICBpZiAocmV0eXBlID09PSBwYXNzd29yZCkge1xuICAgICAgICAgICAgVXNlclN2Yy5yZWdpc3Rlcih1c2VybmFtZSwgcGFzc3dvcmQpXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbiAodXNlcikge1xuICAgICAgICAgICAgICAgIFVzZXJTdmMubG9naW4odXNlcm5hbWUsIHBhc3N3b3JkKVxuICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ2xvZ2luJywgcmVzcG9uc2UuZGF0YSlcbiAgICAgICAgICAgICAgICAgICAgJGxvY2F0aW9uLnBhdGgoJy8nKVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfVxufSkiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb25maWcoZnVuY3Rpb24gKCRyb3V0ZVByb3ZpZGVyKSB7XG4gICAgJHJvdXRlUHJvdmlkZXJcbiAgICAud2hlbignLycsIHsgY29udHJvbGxlcjogJ1Njb3Jlc0N0cmwnLCB0ZW1wbGF0ZVVybDogJ3Njb3Jlcy5odG1sJyB9KVxuICAgIC53aGVuKCcvcmVnaXN0ZXInLCB7Y29udHJvbGxlcjogJ1JlZ2lzdGVyQ3RybCcsIHRlbXBsYXRlVXJsOiAncmVnaXN0ZXIuaHRtbCcgfSlcbiAgICAud2hlbignL2xvZ2luJywge2NvbnRyb2xsZXI6ICdMb2dpbkN0cmwnLCB0ZW1wbGF0ZVVybDogJ2xvZ2luLmh0bWwnIH0pXG4gICAgLndoZW4oJy9ob21lJywge2NvbnRyb2xsZXI6ICdIb21lQ3RybCcsIHRlbXBsYXRlVXJsOiAnaG9tZS5odG1sJyB9KVxufSlcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbnRyb2xsZXIoJ1Njb3Jlc0N0cmwnLCBmdW5jdGlvbiAoJHNjb3BlLCBTY29yZXNTdmMsICRsb2NhdGlvbikge1xuICAgICRzY29wZS5hZGRTY29yZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCRzY29wZS5zY29yZXMpIHtcbiAgICAgICAgICAgIFNjb3Jlc1N2Yy5jcmVhdGUoe1xuICAgICAgICAgICAgICAgIHVzZXJuYW1lOiAnYW50aG9ueXByb2dyYW1zJyxcbiAgICAgICAgICAgICAgICBzY29yZTogJHNjb3BlLnNjb3Jlc1xuICAgICAgICAgICAgfSkuc3VjY2VzcyhmdW5jdGlvbiAocG9zdCkge1xuICAgICAgICAgICAgICAgICRzY29wZS5wb3N0Qm9keSA9IG51bGxcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBQb3N0c1N2Yy5mZXRjaCgpLnN1Y2Nlc3MoZnVuY3Rpb24gKHNjb3Jlcykge1xuICAgICAgICAkc2NvcGUuc2NvcmVzID0gc2NvcmVzXG4gICAgfSlcbn0pXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5zZXJ2aWNlKCdTY29yZXNTdmMnLCBmdW5jdGlvbiAoJGh0dHApIHtcbiAgICB0aGlzLmZldGNoID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3Njb3JlcycpXG4gICAgfVxuICAgIHRoaXMuY3JlYXRlID0gZnVuY3Rpb24gKHNjb3JlKSB7XG4gICAgICAgIHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL3Njb3JlcycsIHNjb3JlKVxuICAgIH1cbn0pXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5zZXJ2aWNlKCdVc2VyU3ZjJywgZnVuY3Rpb24gKCRodHRwKSB7XG4gICAgdmFyIHN2YyA9IHRoaXNcbiAgICBzdmMuZ2V0VXNlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS91c2VycycpXG4gICAgfVxuICAgIHN2Yy5sb2dpbiA9IGZ1bmN0aW9uICh1c2VybmFtZSwgcGFzc3dvcmQpIHtcbiAgICAgICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvc2Vzc2lvbnMnLCB7XG4gICAgICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsIHBhc3N3b3JkOiBwYXNzd29yZFxuICAgICAgICB9KS50aGVuKGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgICAgICAgIHN2Yy50b2tlbiA9IHZhbC5kYXRhXG4gICAgICAgICAgICAkaHR0cC5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vblsnWC1BdXRoJ10gPSB2YWwuZGF0YVxuICAgICAgICAgICAgcmV0dXJuIHN2Yy5nZXRVc2VyKClcbiAgICAgICAgfSlcbiAgICB9XG4gICAgc3ZjLnJlZ2lzdGVyID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuICAgICAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS91c2VycycsIHtcbiAgICAgICAgICAgIHVzZXJuYW1lOiB1c2VybmFtZSwgcGFzc3dvcmQ6IHBhc3N3b3JkXG4gICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHN2Yy5sb2dpbih1c2VybmFtZSwgcGFzc3dvcmQpXG4gICAgICAgIH0pXG4gICAgfVxufSlcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
