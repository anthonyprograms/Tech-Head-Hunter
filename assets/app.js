angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope",function(e){e.$on("login",function(n,t){e.currentUser=t}),e.logout=function(){e.currentUser=null}}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","$location",function(e,n,t){e.login=function(o,r){n.login(o,r).then(function(n){e.$emit("login",n.data),t.path("/")})}}]),angular.module("app").controller("PlayCtrl",["$scope",function(e){}]),angular.module("app").controller("ProfileCtrl",["$scope","UserSvc",function(e,n){n.getUser().then(function(n){console.log(n),e.user=n.data})}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc","$location",function(e,n,t){e.register=function(o,r,l){l===r&&n.register(o,r).then(function(l){n.login(o,r).then(function(n){e.$emit("login",n.data),t.path("/")})})}}]),angular.module("app").config(["$routeProvider",function(e){e.when("/",{controller:"ScoresCtrl",templateUrl:"scores.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"}).when("/play",{controller:"PlayCtrl",templateUrl:"game.html"}).when("/profile",{controller:"ProfileCtrl",templateUrl:"profile.html"})}]),angular.module("app").controller("ScoresCtrl",["$scope","ScoresSvc","$location",function(e,n,t){e.addScore=function(){e.scores&&n.create({username:"anthony",points:e.scores}).success(function(e){console.log("success")})},n.fetch().success(function(n){e.scores=n})}]),angular.module("app").service("ScoresSvc",["$http",function(e){this.fetch=function(){return e.get("/api/scores")},this.create=function(n){return e.post("/api/scores",n)}}]),angular.module("app").service("UserSvc",["$http",function(e){var n=this;n.getUser=function(){return e.get("/api/users")},n.login=function(t,o){return e.post("/api/sessions",{username:t,password:o}).then(function(t){return n.token=t.data,e.defaults.headers.common["x-auth"]=t.data,n.getUser()})},n.register=function(t,o){return e.post("/api/users",{username:t,password:o}).then(function(){return n.login(t,o)})}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImFwcGxpY2F0aW9uLmN0cmwuanMiLCJsb2dpbi5jdHJsLmpzIiwicGxheS5jdHJsLmpzIiwicHJvZmlsZS5jdHJsLmpzIiwicmVnaXN0ZXIuY3RybC5qcyIsInJvdXRlcy5qcyIsInNjb3Jlcy5jdHJsLmpzIiwic2NvcmVzLnN2Yy5qcyIsInVzZXIuc3ZjLmpzIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJtb2R1bGUiLCJjb250cm9sbGVyIiwiJHNjb3BlIiwiJG9uIiwiXyIsInVzZXIiLCJjdXJyZW50VXNlciIsImxvZ291dCIsIlVzZXJTdmMiLCIkbG9jYXRpb24iLCJsb2dpbiIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJ0aGVuIiwicmVzcG9uc2UiLCIkZW1pdCIsImRhdGEiLCJwYXRoIiwiZ2V0VXNlciIsImNvbnNvbGUiLCJsb2ciLCJyZWdpc3RlciIsInJldHlwZSIsImNvbmZpZyIsIiRyb3V0ZVByb3ZpZGVyIiwid2hlbiIsInRlbXBsYXRlVXJsIiwiU2NvcmVzU3ZjIiwiYWRkU2NvcmUiLCJzY29yZXMiLCJjcmVhdGUiLCJwb2ludHMiLCJzdWNjZXNzIiwiZmV0Y2giLCJzY29yZSIsInNlcnZpY2UiLCIkaHR0cCIsInRoaXMiLCJnZXQiLCJwb3N0Iiwic3ZjIiwidmFsIiwidG9rZW4iLCJkZWZhdWx0cyIsImhlYWRlcnMiLCJjb21tb24iXSwibWFwcGluZ3MiOiJBQUFBQSxRQUFBQyxPQUFBLE9BQ0EsWUNEQUQsUUFBQUMsT0FBQSxPQUNBQyxXQUFBLG1CQUFBLFNBQUEsU0FBQUMsR0FDQUEsRUFBQUMsSUFBQSxRQUFBLFNBQUFDLEVBQUFDLEdBQ0FILEVBQUFJLFlBQUFELElBRUFILEVBQUFLLE9BQUEsV0FDQUwsRUFBQUksWUFBQSxTQ05BUCxRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsYUFBQSxTQUFBLFVBQUEsWUFBQSxTQUFBQyxFQUFBTSxFQUFBQyxHQUNBUCxFQUFBUSxNQUFBLFNBQUFDLEVBQUFDLEdBQ0FKLEVBQUFFLE1BQUFDLEVBQUFDLEdBQ0FDLEtBQUEsU0FBQUMsR0FDQVosRUFBQWEsTUFBQSxRQUFBRCxFQUFBRSxNQUNBUCxFQUFBUSxLQUFBLFdDTkFsQixRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsWUFBQSxTQUFBLFNBQUFDLE9DREFILFFBQUFDLE9BQUEsT0FDQUMsV0FBQSxlQUFBLFNBQUEsVUFBQSxTQUFBQyxFQUFBTSxHQUNBQSxFQUFBVSxVQUNBTCxLQUFBLFNBQUFDLEdBQ0FLLFFBQUFDLElBQUFOLEdBQ0FaLEVBQUFHLEtBQUFTLEVBQUFFLFVDTEFqQixRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsZ0JBQUEsU0FBQSxVQUFBLFlBQUEsU0FBQUMsRUFBQU0sRUFBQUMsR0FDQVAsRUFBQW1CLFNBQUEsU0FBQVYsRUFBQUMsRUFBQVUsR0FDQUEsSUFBQVYsR0FDQUosRUFBQWEsU0FBQVYsRUFBQUMsR0FDQUMsS0FBQSxTQUFBUixHQUNBRyxFQUFBRSxNQUFBQyxFQUFBQyxHQUNBQyxLQUFBLFNBQUFDLEdBQ0FaLEVBQUFhLE1BQUEsUUFBQUQsRUFBQUUsTUFDQVAsRUFBQVEsS0FBQSxhQ1RBbEIsUUFBQUMsT0FBQSxPQUNBdUIsUUFBQSxpQkFBQSxTQUFBQyxHQUNBQSxFQUNBQyxLQUFBLEtBQUF4QixXQUFBLGFBQUF5QixZQUFBLGdCQUNBRCxLQUFBLGFBQUF4QixXQUFBLGVBQUF5QixZQUFBLGtCQUNBRCxLQUFBLFVBQUF4QixXQUFBLFlBQUF5QixZQUFBLGVBQ0FELEtBQUEsU0FBQXhCLFdBQUEsV0FBQXlCLFlBQUEsY0FDQUQsS0FBQSxZQUFBeEIsV0FBQSxjQUFBeUIsWUFBQSxvQkNQQTNCLFFBQUFDLE9BQUEsT0FDQUMsV0FBQSxjQUFBLFNBQUEsWUFBQSxZQUFBLFNBQUFDLEVBQUF5QixFQUFBbEIsR0FDQVAsRUFBQTBCLFNBQUEsV0FDQTFCLEVBQUEyQixRQUNBRixFQUFBRyxRQUNBbkIsU0FBQSxVQUNBb0IsT0FBQTdCLEVBQUEyQixTQUNBRyxRQUFBLFNBQUFILEdBQ0FWLFFBQUFDLElBQUEsY0FLQU8sRUFBQU0sUUFBQUQsUUFBQSxTQUFBRSxHQUNBaEMsRUFBQTJCLE9BQUFLLE9DZEFuQyxRQUFBQyxPQUFBLE9BQ0FtQyxRQUFBLGFBQUEsUUFBQSxTQUFBQyxHQUNBQyxLQUFBSixNQUFBLFdBQ0EsTUFBQUcsR0FBQUUsSUFBQSxnQkFFQUQsS0FBQVAsT0FBQSxTQUFBSSxHQUNBLE1BQUFFLEdBQUFHLEtBQUEsY0FBQUwsT0NOQW5DLFFBQUFDLE9BQUEsT0FDQW1DLFFBQUEsV0FBQSxRQUFBLFNBQUFDLEdBQ0EsR0FBQUksR0FBQUgsSUFDQUcsR0FBQXRCLFFBQUEsV0FDQSxNQUFBa0IsR0FBQUUsSUFBQSxlQUVBRSxFQUFBOUIsTUFBQSxTQUFBQyxFQUFBQyxHQUNBLE1BQUF3QixHQUFBRyxLQUFBLGlCQUNBNUIsU0FBQUEsRUFBQUMsU0FBQUEsSUFDQUMsS0FBQSxTQUFBNEIsR0FHQSxNQUZBRCxHQUFBRSxNQUFBRCxFQUFBekIsS0FDQW9CLEVBQUFPLFNBQUFDLFFBQUFDLE9BQUEsVUFBQUosRUFBQXpCLEtBQ0F3QixFQUFBdEIsYUFHQXNCLEVBQUFuQixTQUFBLFNBQUFWLEVBQUFDLEdBQ0EsTUFBQXdCLEdBQUFHLEtBQUEsY0FDQTVCLFNBQUFBLEVBQUFDLFNBQUFBLElBQ0FDLEtBQUEsV0FDQSxNQUFBMkIsR0FBQTlCLE1BQUFDLEVBQUFDIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKCdhcHAnLCBbXG4gICAgJ25nUm91dGUnXG5dKSIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbnRyb2xsZXIoJ0FwcGxpY2F0aW9uQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUpIHtcbiAgICAkc2NvcGUuJG9uKCdsb2dpbicsIGZ1bmN0aW9uIChfLCB1c2VyKSB7XG4gICAgICAgICRzY29wZS5jdXJyZW50VXNlciA9IHVzZXJcbiAgICB9KVxuICAgICRzY29wZS5sb2dvdXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICRzY29wZS5jdXJyZW50VXNlciA9IG51bGxcbiAgICB9XG59KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignTG9naW5DdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgVXNlclN2YywgJGxvY2F0aW9uKSB7XG4gICAgJHNjb3BlLmxvZ2luID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuICAgICAgICBVc2VyU3ZjLmxvZ2luKHVzZXJuYW1lLCBwYXNzd29yZClcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ2xvZ2luJywgcmVzcG9uc2UuZGF0YSlcbiAgICAgICAgICAgICRsb2NhdGlvbi5wYXRoKCcvJylcbiAgICAgICAgfSlcbiAgICB9XG59KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignUGxheUN0cmwnLCBmdW5jdGlvbiAoJHNjb3BlKSB7XG5cbn0pXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdQcm9maWxlQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsIFVzZXJTdmMpIHtcbiAgICBVc2VyU3ZjLmdldFVzZXIoKVxuICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSlcbiAgICAgICAgJHNjb3BlLnVzZXIgPSByZXNwb25zZS5kYXRhXG4gICAgfSlcbn0pXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdSZWdpc3RlckN0cmwnLCBmdW5jdGlvbiAoJHNjb3BlLCBVc2VyU3ZjLCAkbG9jYXRpb24pIHtcbiAgICAkc2NvcGUucmVnaXN0ZXIgPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkLCByZXR5cGUpIHtcbiAgICAgICAgaWYgKHJldHlwZSA9PT0gcGFzc3dvcmQpIHtcbiAgICAgICAgICAgIFVzZXJTdmMucmVnaXN0ZXIodXNlcm5hbWUsIHBhc3N3b3JkKVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHVzZXIpIHtcbiAgICAgICAgICAgICAgICBVc2VyU3ZjLmxvZ2luKHVzZXJuYW1lLCBwYXNzd29yZClcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdsb2dpbicsIHJlc3BvbnNlLmRhdGEpXG4gICAgICAgICAgICAgICAgICAgICRsb2NhdGlvbi5wYXRoKCcvJylcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cbn0pXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb25maWcoZnVuY3Rpb24gKCRyb3V0ZVByb3ZpZGVyKSB7XG4gICAgJHJvdXRlUHJvdmlkZXJcbiAgICAud2hlbignLycsIHsgY29udHJvbGxlcjogJ1Njb3Jlc0N0cmwnLCB0ZW1wbGF0ZVVybDogJ3Njb3Jlcy5odG1sJyB9KVxuICAgIC53aGVuKCcvcmVnaXN0ZXInLCB7Y29udHJvbGxlcjogJ1JlZ2lzdGVyQ3RybCcsIHRlbXBsYXRlVXJsOiAncmVnaXN0ZXIuaHRtbCcgfSlcbiAgICAud2hlbignL2xvZ2luJywge2NvbnRyb2xsZXI6ICdMb2dpbkN0cmwnLCB0ZW1wbGF0ZVVybDogJ2xvZ2luLmh0bWwnIH0pXG4gICAgLndoZW4oJy9wbGF5Jywge2NvbnRyb2xsZXI6ICdQbGF5Q3RybCcsIHRlbXBsYXRlVXJsOiAnZ2FtZS5odG1sJyB9KVxuICAgIC53aGVuKCcvcHJvZmlsZScsIHtjb250cm9sbGVyOiAnUHJvZmlsZUN0cmwnLCB0ZW1wbGF0ZVVybDogJ3Byb2ZpbGUuaHRtbCcgfSlcbn0pXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdTY29yZXNDdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgU2NvcmVzU3ZjLCAkbG9jYXRpb24pIHtcbiAgICAkc2NvcGUuYWRkU2NvcmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICgkc2NvcGUuc2NvcmVzKSB7XG4gICAgICAgICAgICBTY29yZXNTdmMuY3JlYXRlKHtcbiAgICAgICAgICAgICAgICB1c2VybmFtZTogJ2FudGhvbnknLFxuICAgICAgICAgICAgICAgIHBvaW50czogJHNjb3BlLnNjb3Jlc1xuICAgICAgICAgICAgfSkuc3VjY2VzcyhmdW5jdGlvbiAoc2NvcmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3N1Y2Nlc3MnKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIFNjb3Jlc1N2Yy5mZXRjaCgpLnN1Y2Nlc3MoZnVuY3Rpb24gKHNjb3JlKSB7XG4gICAgICAgICRzY29wZS5zY29yZXMgPSBzY29yZVxuICAgIH0pXG59KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uc2VydmljZSgnU2NvcmVzU3ZjJywgZnVuY3Rpb24gKCRodHRwKSB7XG4gICAgdGhpcy5mZXRjaCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9zY29yZXMnKVxuICAgIH1cbiAgICB0aGlzLmNyZWF0ZSA9IGZ1bmN0aW9uIChzY29yZSkge1xuICAgICAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9zY29yZXMnLCBzY29yZSlcbiAgICB9XG59KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uc2VydmljZSgnVXNlclN2YycsIGZ1bmN0aW9uICgkaHR0cCkge1xuICAgIHZhciBzdmMgPSB0aGlzXG4gICAgc3ZjLmdldFVzZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvdXNlcnMnKVxuICAgIH1cbiAgICBzdmMubG9naW4gPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gICAgICAgIHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL3Nlc3Npb25zJywge1xuICAgICAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLCBwYXNzd29yZDogcGFzc3dvcmRcbiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAodmFsKSB7XG4gICAgICAgICAgICBzdmMudG9rZW4gPSB2YWwuZGF0YVxuICAgICAgICAgICAgJGh0dHAuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bJ3gtYXV0aCddID0gdmFsLmRhdGFcbiAgICAgICAgICAgIHJldHVybiBzdmMuZ2V0VXNlcigpXG4gICAgICAgIH0pXG4gICAgfVxuICAgIHN2Yy5yZWdpc3RlciA9IGZ1bmN0aW9uICh1c2VybmFtZSwgcGFzc3dvcmQpIHtcbiAgICAgICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvdXNlcnMnLCB7XG4gICAgICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsIHBhc3N3b3JkOiBwYXNzd29yZFxuICAgICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBzdmMubG9naW4odXNlcm5hbWUsIHBhc3N3b3JkKVxuICAgICAgICB9KVxuICAgIH1cbn0pXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
